@using MessageBusSample.Client.Components.Actions.Rename
@using ReactiveUI
@using MessageBusSample.Client.Components.Actions
@using System.Reactive.Disposables

@implements IDisposable

@typeparam T


<MudPaper Class="mud-height-full">
    <MudCard Class="mud-height-full">
        <MudCardHeader>
            <MudText Typo="Typo.subtitle2">
                @Title
            </MudText>
        </MudCardHeader>
        <MudCardContent>
            <div class="scrollable-list">
                <MudVirtualize Items="@_items">
                    @ListItemContent(context)
                </MudVirtualize>
            </div>
        </MudCardContent>
    </MudCard>
</MudPaper>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter, EditorRequired]
    public Func<Task<List<T>>> GetItems { get; set; } = default!;

    [Parameter, EditorRequired]
    public RenderFragment<T> ListItemContent { get; set; } = null!;

    private List<T>? _items;

    private readonly CompositeDisposable _disposables = new CompositeDisposable();



    protected override async Task OnInitializedAsync()
    {
        var deletedSubscription = MessageBus.Current.Listen<ResolvedDeleteActionMessage>().Subscribe(async message =>
            {
                await InvokeAsync(ServerData);
                Console.WriteLine($"Received ResolvedDeleteActionMessage for {message.EntityId}");
            });

        var renamedSubscription = MessageBus.Current.Listen<ResolveRenameActionMessage>().Subscribe(async message =>
        {
            await InvokeAsync(ServerData);
            Console.WriteLine($"Received InitRenameActionMessage for doesnt matter");
        });

        _disposables.Add(deletedSubscription);
        _disposables.Add(renamedSubscription);
        
        _items = await GetItems();

        base.OnInitialized();
    }

    public async Task ServerData()
    {
        _items = await GetItems();
        StateHasChanged();
    }

    public void Dispose()
    {
        // Clean up resources
        _disposables.Dispose();
        Console.WriteLine("Component disposed!");
    }
}
